{"version":3,"sources":["../src/js/mcage.ts"],"names":[],"mappings":";;;;;;;;;AAAA,CAAC;;QAeG,SAAe,YAAY;;gBACvB,IAAI,GAAG,GAAG,MAAM,KAAK,CAAC,+DAA+D,CAAC,CAAC;gBACvF,OAAO,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;YAC5B,CAAC;SAAA;QAED,MAAM,SAAS;YAKX,YAAY,IAAY;gBACpB,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;gBAEvC,IAAI,IAAI,MAAM,CAAC;gBACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;gBAEtC,IAAI,IAAI,IAAI,CAAC;gBACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC;YAED,QAAQ;gBACJ,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACpC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpB,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACpC,IAAI,KAAK,EAAE;wBACP,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;qBACxD;gBACL,CAAC,CAAC,CAAC;gBACH,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC;YACxC,CAAC;SACJ;QAED,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAE3D,MAAM,oBAAoB,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9D,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SACjC;QAED,MAAM,QAAQ,GAAG,MAAM,YAAY,EAAE,CAAC;QAEtC,IAAI,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACjC,KAAK,MAAM,CAAC,IAAI,oBAAoB,EAAE;YAClC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBACf,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3D;SACJ;QACD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAEzD,IAAI,GAAG,GAAG,aAAa,OAAO,CAAC,EAAE,OAAO,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC;YACpE,IAAI,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC;YAE/B,QAAQ,CAAC,IAAI,CAAC,SAAS,IAAI,+BAA+B,IAAI,KAAK,GAAG,UAAU,CAAC;QACrF,CAAC,CAAC,CAAC;QACH,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC;SAC9D;IACL,CAAC;CAAA,CAAC,EAAE,CAAC","file":"mcage.js","sourcesContent":["(async function () {\n    interface Manifest {\n        latest: {\n            release: string;\n            snapshot: string;\n        };\n        versions: {\n            id: string\n            type: string\n            url: string\n            time: string\n            releaseTime: string\n        }[];\n    }\n\n    async function get_manifest(): Promise<Manifest> {\n        let res = await fetch(\"https://launchermeta.mojang.com/mc/game/version_manifest.json\");\n        return await res.json();\n    }\n\n    class TimeDelta {\n        years: number;\n        months: number;\n        days: number;\n\n        constructor(time: number) {\n            time /= 24 * 60 * 60 * 1000;\n            this.years = Math.floor(time / 365.25);\n\n            time %= 365.25;\n            this.months = Math.floor(time / 30.5);\n\n            time %= 30.5;\n            this.days = Math.floor(time);\n        }\n\n        toString() {\n            let parts = [];\n            [\"years\", \"months\", \"days\"].forEach(p => {\n                let value = this[p];\n                let key = p.substr(0, p.length - 1);\n                if (value) {\n                    parts.push(`${value} ${key}${value > 1 ? \"s\" : \"\"}`);\n                }\n            });\n            return parts.join(\", \") || \"0 days\";\n        }\n    }\n\n    const params = new URLSearchParams(window.location.search);\n\n    const filterableProperties = [\"id\", \"type\"];\n\n    if (filterableProperties.filter(p => params.has(p)).length === 0) {\n        params.set(\"type\", \"release\");\n    }\n\n    const manifest = await get_manifest();\n\n    let versions = manifest.versions;\n    for (const p of filterableProperties) {\n        if (params.get(p)) {\n            versions = versions.filter(v => params.get(p) === v[p]);\n        }\n    }\n    versions.forEach(version => {\n        let delta = Date.now() - Date.parse(version.releaseTime);\n\n        let age = `Minecraft ${version.id} is ${new TimeDelta(delta)} old.`;\n        let link = \"?id=\" + version.id;\n\n        document.body.innerHTML += `<p class=\"version\"><a href=\"${link}\">${age}</a></p>`;\n    });\n    if (versions.length > 1) {\n        document.getElementById(\"intro\").style.display = \"initial\";\n    }\n})();\n"]}